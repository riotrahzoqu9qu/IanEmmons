plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'eclipse'
	id 'checkstyle'
	id "com.github.spotbugs" version "4.6.2"
}

group = 'org.virginiaso'
version = '1.4.1'
sourceCompatibility = '11'

ext {
	eol = "${System.lineSeparator}"
	genRsrcDir = file("$buildDir/generated/resources")
	projPropsRsrcFile = file("$genRsrcDir/project-info.properties")
}

repositories {
	jcenter()
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation 'org.apache.commons:commons-csv:1.8'
	implementation 'org.apache.commons:commons-lang3:3.11'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'software.amazon.awssdk:s3:2.16.8'

	compileOnly 'com.github.spotbugs:spotbugs-annotations:4.2.1'
	testCompileOnly 'com.github.spotbugs:spotbugs-annotations:4.2.1'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

sourceSets {
	main {
		resources { srcDir genRsrcDir }
	}
}

task generateProjectPropertiesRsrc {
	outputs.file(projPropsRsrcFile)
	doLast {
		projPropsRsrcFile.text = "projectName=${project.name}${eol}projectVersion=${project.version}${eol}"
	}
}

processResources.dependsOn generateProjectPropertiesRsrc

checkstyle {
	configFile file("${projectDir}/config/checkstyle/checkstyle.xml")
	toolVersion '8.38'
}

test {
	useJUnitPlatform()
}
